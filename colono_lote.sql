-- Insertar ColonoLote
DELIMITER //

CREATE PROCEDURE InsertColonoLote(
    IN CL_NUMERO DOUBLE,
    IN L_MANZANA CHAR(3),
    IN L_NUMERO CHAR(6),
    IN CL_TELEFONO CHAR(35),
    IN CL_MAIL CHAR(100),
    IN CL_IMPORTE DOUBLE,
    IN CL_FECHA_ALTA DATETIME,
    IN CL_FECHA_BAJA DATETIME,
    IN CL_COMENTARIO VARCHAR(45))
BEGIN
    -- Validación de la clave primaria: no debe ser vacía ni nula
    IF CL_NUMERO IS NULL THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Error: CL_NUMERO no puede estar vacío.';
    END IF;

    IF L_MANZANA IS NULL OR L_MANZANA = '' THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Error: L_MANZANA no puede estar vacía.';
    END IF;

    IF L_NUMERO IS NULL OR L_NUMERO = '' THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Error: L_NUMERO no puede estar vacío.';
    END IF;

    -- Inserción de los datos
    INSERT INTO colono_lote (CL_NUMERO, L_MANZANA, L_NUMERO, CL_TELEFONO, CL_MAIL, CL_IMPORTE, CL_FECHA_ALTA, CL_FECHA_BAJA, CL_COMENTARIO)
    VALUES (CL_NUMERO, L_MANZANA, L_NUMERO, CL_TELEFONO, CL_MAIL, CL_IMPORTE, CL_FECHA_ALTA, CL_FECHA_BAJA, CL_COMENTARIO);
END //

DELIMITER ;
-- Actualizar
DELIMITER //

CREATE PROCEDURE UpdateColonoLote(
    IN CL_NUMERO DOUBLE,
    IN L_MANZANA CHAR(3),
    IN L_NUMERO CHAR(6),
    IN CL_TELEFONO CHAR(35),
    IN CL_MAIL CHAR(100),
    IN CL_IMPORTE DOUBLE,
    IN CL_FECHA_ALTA DATETIME,
    IN CL_FECHA_BAJA DATETIME,
    IN CL_COMENTARIO VARCHAR(45))
BEGIN
    -- Validación de la clave primaria: no debe ser vacía ni nula
    IF CL_NUMERO IS NULL THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Error: CL_NUMERO no puede estar vacío.';
    END IF;

    IF L_MANZANA IS NULL OR L_MANZANA = '' THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Error: L_MANZANA no puede estar vacía.';
    END IF;

    IF L_NUMERO IS NULL OR L_NUMERO = '' THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Error: L_NUMERO no puede estar vacío.';
    END IF;

    -- Actualización de los datos
    UPDATE colono_lote
    SET CL_TELEFONO = CL_TELEFONO, CL_MAIL = CL_MAIL, CL_IMPORTE = CL_IMPORTE, CL_FECHA_ALTA = CL_FECHA_ALTA, CL_FECHA_BAJA = CL_FECHA_BAJA, CL_COMENTARIO = CL_COMENTARIO
    WHERE CL_NUMERO = CL_NUMERO AND L_MANZANA = L_MANZANA AND L_NUMERO = L_NUMERO;
END //

DELIMITER ;
-- Eliminar ColonoLote
DELIMITER //

CREATE PROCEDURE DeleteColonoLote(
    IN CL_NUMERO DOUBLE,
    IN L_MANZANA CHAR(3),
    IN L_NUMERO CHAR(6))
BEGIN
    -- Intentar eliminar el registro
    DELETE FROM colono_lote WHERE CL_NUMERO = CL_NUMERO AND L_MANZANA = L_MANZANA AND L_NUMERO = L_NUMERO;
END //

DELIMITER ;
-- Validar antes de eliminar el colono
DELIMITER //

CREATE TRIGGER BeforeDeleteColonoLote
BEFORE DELETE ON colono_lote
FOR EACH ROW
BEGIN
    -- Validación de relaciones
    IF EXISTS (SELECT 1 FROM cargos WHERE L_MANZANA = OLD.L_MANZANA AND L_NUMERO = OLD.L_NUMERO) THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Error: No se puede eliminar porque está referenciado en la tabla cargos.';
    END IF;
END //

DELIMITER ;
